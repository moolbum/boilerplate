{
  "extends": "./tsconfig.paths.json",
  "compilerOptions": {
    "target": "es5", // 코드를 컴파일할 ECMAScript 버전을 지정합니다. 여기서는 ES5로 지정되어 있습니다.
    "lib": ["dom", "dom.iterable", "esnext"], // TypeScript에서 사용할 라이브러리를 지정합니다. DOM 및 ESNext와 같은 라이브러리가 여기에 포함되어 있습니다.
    "allowJs": true, // JavaScript 파일을 컴파일할 때 허용 여부를 지정합니다.
    "skipLibCheck": true, // 라이브러리 파일의 검사를 건너뛸지 여부를 지정합니다.
    "esModuleInterop": true, // CommonJS와 ES 모듈 간의 상호 운용성을 향상시키기 위해 esModuleInterop을 활성화합니다.
    "allowSyntheticDefaultImports": true, // default 키워드를 사용한 모듈 가져오기를 지원합니다.
    "strict": true, // 엄격한 타입 검사를 활성화합니다.
    "forceConsistentCasingInFileNames": true, // 파일 이름의 일관된 대소문자 사용을 강제합니다.
    "noFallthroughCasesInSwitch": true, // switch 문에서 case 블록 간의 강제적인 중단을 적용합니다.
    "module": "esnext", // 모듈 코드 생성 방식을 지정합니다. 여기서는 ESNext로 설정되어 있습니다.
    "moduleResolution": "node", // 모듈 해결 전략을 지정합니다. 여기서는 Node.js의 모듈 해결 방식을 사용합니다.
    "resolveJsonModule": true, // JSON 모듈을 로드할 수 있도록 지원을 활성화합니다.
    "isolatedModules": true, // 각 파일이 독립적인 모듈로 간주되도록 지정합니다.
    "noEmit": true, // 실제로 컴파일된 결과를 생성하지 않도록 설정합니다. 주로 타입 체크만 수행합니다.
    "jsx": "react-jsx" // JSX를 어떻게 처리할지 지정합니다. 여기서는 React의 JSX 구문을 사용하도록 설정되어 있습니다.
  },
  "include": ["src", "svg.d.ts"]
}
